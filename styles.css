@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap");

body {
  margin: 0;
  padding: 0;
  font-family: "Roboto Mono", monospace;
  background-color: rgba(125, 192, 99, 0.193);
  overflow: hidden;
}
header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px;
  background: linear-gradient(135deg, #4caf50, #388e3c);
  color: white;
}

header h1 {
  font-size: 1.5rem;
  font-weight: bold;
  margin: 0;
  text-shadow: 2px 2px 5px black;
  margin-left: 20px;
}
.filter {
  margin-right: 30px;
}
/* From Uiverse.io by KhelVers */
.buttons {
  font: inherit;
  background-color: #f0f0f0;
  border: 0;
  width: 120px;
  margin-bottom: 10px;
  color: #0000009e;
  border-radius: 0.5em;
  box-shadow: inset 0 0.0625em 0 0 #f4f4f4, 0 0.0625em 0 0 #efefef,
    0 0.125em 0 0 #ececec, 0 0.25em 0 0 #e0e0e0, 0 0.3125em 0 0 #dedede,
    0 0.375em 0 0 #dcdcdc, 0 0.425em 0 0 #cacaca, 0 0.425em 0.5em 0 #cecece;
  transition: 0.15s ease;
  cursor: pointer;
}
.buttons:active {
  translate: 0 0.225em;
  box-shadow: inset 0 0.03em 0 0 #f4f4f4, 0 0.03em 0 0 #efefef,
    0 0.0625em 0 0 #ececec, 0 0.125em 0 0 #e0e0e0, 0 0.125em 0 0 #dedede,
    0 0.2em 0 0 #dcdcdc, 0 0.225em 0 0 #cacaca, 0 0.225em 0.375em 0 #cecece;
}

.app-container {
  display: flex;
  align-items: center;
  flex-direction: column;
  overflow-wrap: break-word;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.box-input-button {
  margin-top: 10px;
  display: flex;
  width: 100%;

  justify-content: center;
}
/* From Uiverse.io by shadowmurphy */
#task-input {
  border: 2px solid transparent;
  width: 15em;
  height: 2.5em;
  padding-left: 0.8em;
  outline: none;
  background-color: #ffffff;
  border-radius: 10px;
  transition: all 0.5s;
  transform: translate(-10%);
}

#task-input:hover,
#taskinput:focus {
  border: 2px solid hsla(120, 62%, 36%, 0.454);
  box-shadow: 0px 0px 0px 7px hsla(120, 62%, 36%, 0.154);
  background-color: white;
}

#add-button {
  font: inherit;
  background-color: #f0f0f0;
  border: 0;
  width: 120px;
  margin-bottom: 10px;
  color: #0000009e;
  border-radius: 0.5em;
  box-shadow: inset 0 0.0625em 0 0 #f4f4f4, 0 0.0625em 0 0 #efefef,
    0 0.125em 0 0 #ececec, 0 0.25em 0 0 #e0e0e0, 0 0.3125em 0 0 #dedede,
    0 0.375em 0 0 #dcdcdc, 0 0.425em 0 0 #cacaca, 0 0.425em 0.5em 0 #cecece;
  transition: 0.15s ease;
  cursor: pointer;
}

#add-button:active {
  translate: 0 0.225em;
  box-shadow: inset 0 0.03em 0 0 #f4f4f4, 0 0.03em 0 0 #efefef,
    0 0.0625em 0 0 #ececec, 0 0.125em 0 0 #e0e0e0, 0 0.125em 0 0 #dedede,
    0 0.2em 0 0 #dcdcdc, 0 0.225em 0 0 #cacaca, 0 0.225em 0.375em 0 #cecece;
}
.tasks {
  flex-grow: 1;
  width: 100%;
  margin-bottom: 100px;
  overflow-y: auto;
  padding: 0;
  list-style-type: none;
  position: relative;
}

li {
  max-width: 100%;
  padding: 10px;
  border-bottom: 1px solid #284e255c;
  display: flex;
}
footer {
  width: 100%;
  text-align: center;
  background: linear-gradient(135deg, #4caf50, #388e3c);
  color: white;
  padding: 8px 0;
  justify-content: center;
  align-items: center;
  display: flex;
  position: fixed;

  bottom: 0;
  left: 0;
}
/* From Uiverse.io by cssbuttons-io */
.delete-button {
  width: 100px;
  height: 25px;
  cursor: pointer;
  display: flex;
  align-items: center;
  background: red;
  border: none;
  border-radius: 5px;
  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.15);
  background: #e62222;
}

.delete-button,
.delete-button span {
  transition: 200ms;
}

.delete-button .text {
  transform: translateX(10px);
  color: white;
  font-weight: bold;
}

.delete-button .icon {
  position: absolute;
  border-left: 1px solid #c41b1b;
  transform: translateX(70px);
  height: 20px;
  width: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.delete-button svg {
  width: 15px;
  fill: #eee;
}

.delete-button:hover {
  background: #ff3636;
}

.delete-button:hover .text {
  color: transparent;
}

.delete-button:hover .icon {
  width: 90px;
  border-left: none;
  transform: translateX(0);
}

.delete-button:focus {
  outline: none;
}

.delete-button:active .icon svg {
  transform: scale(0.8);
}
.checkboxC {
  border: 1px solid black;
  display: flex;
  flex-direction: row;
  align-items: center; /* Wyrównanie w pionie */
  justify-content: center;
}
.checkboxC label {
  flex-grow: 1; /* Sprawia, że label zajmuje całą pozostałą przestrzeń */
  margin-left: 10px; /* Odstęp między checkboxem a label */
  max-width: 100px;
}
.checkboxC input {
  flex-shrink: 0; /* Zapobiega zmniejszaniu się checkboxa */
}
.checkButtonCont {
  display: flex;
  gap: 10px;
  position: absolute;
  right: 0px;
}
.liDiv {
  position: relative;
  max-width: 70%;
  display: block;
  word-wrap: break-word;
  white-space: normal;
}
/* From Uiverse.io by Pankaj-Meharchandani */
/* Hide the default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Container holding the custom checkbox */
.container {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
}

/* The custom checkbox (3D box with gradient) */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 2em;
  width: 2em;
  background: linear-gradient(
    145deg,
    #ececec,
    #c8c8c8
  ); /* Soft light 3D effect */
  border-radius: 12px; /* Rounded square */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2), inset 0 -2px 5px rgba(0, 0, 0, 0.1); /* 3D shadow */
  transition: background-color 0.4s ease, transform 0.3s ease;
  overflow: hidden;
  position: relative;
}

/* When checked, add vibrant gradient background */
.container input:checked ~ .checkmark {
  background: linear-gradient(45deg, #42e695, #3bb2b8);
  transform: scale(1.1); /* Slight pop-out effect */
  box-shadow: 0 0px 20px rgba(66, 230, 149, 0.6),
    inset 0 -2px 8px rgba(0, 0, 0, 0.2);
}

/* The checkmark itself */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  width: 0.5em;
  height: 1em;
  border: solid white;
  border-width: 0 0.2em 0.2em 0;
  transform: rotate(45deg);
  left: 0.65em;
  top: 0.2em;
}

/* When checked, show the checkmark with a pulse animation */
.container input:checked ~ .checkmark:after {
  display: block;
  animation: pulse 0.6s ease forwards;
}

/* Pulse animation for checkmark */
@keyframes pulse {
  0% {
    transform: scale(0) rotate(45deg);
  }
  50% {
    transform: scale(1.2) rotate(45deg);
  }
  100% {
    transform: scale(1) rotate(45deg);
  }
}

/* Add sparkles when checked */
.container input:checked ~ .checkmark:before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 120%;
  height: 120%;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.5),
    transparent 80%
  );
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  border-radius: 50%;
  transition: transform 0.5s ease, opacity 0.5s ease;
  animation: sparkle 0.6s ease-out forwards;
}

@keyframes sparkle {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0.5;
  }
  50% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
}

/* On hover, make it feel interactive with a glowing border */
.container:hover .checkmark {
  box-shadow: 0 0 15px rgba(255, 255, 255, 0.7), 0 4px 10px rgba(0, 0, 0, 0.2);
}
